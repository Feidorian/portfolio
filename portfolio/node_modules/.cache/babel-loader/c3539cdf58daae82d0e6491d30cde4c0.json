{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Chip, Grid, Icon, Paper, Stack, SvgIcon, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport { ReactComponent as LeaderShip } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/leadership.svg\";\nimport { ReactComponent as Collaboration } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/support.svg\";\nimport { ReactComponent as CustomerService } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/customer-service.svg\";\nimport { ReactComponent as ProblemSolving } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/puzzle.svg\";\nimport { ReactComponent as CriticalThinking } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/thinking.svg\";\nimport { ReactComponent as Creativity } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/design-thinking.svg\";\nimport { ReactComponent as VisualThinking } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/storyboard.svg\";\nimport { ReactComponent as WorkEthic } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/struggle.svg\";\nimport { ReactComponent as Enthusiasm } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/business.svg\";\nimport { ReactComponent as Organization } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/project-plan.svg\";\nimport { ReactComponent as Python } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/python-plain.svg\";\nimport { ReactComponent as HTML } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/html5-plain.svg\";\nimport { ReactComponent as JavaScript } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/javascript-plain.svg\";\nimport { ReactComponent as CSS } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/css3-plain.svg\";\nimport { ReactComponent as C } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/c-plain.svg\";\nimport { ReactComponent as Java } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/java-plain.svg\";\nimport { ReactComponent as Kotlin } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/kotlin-plain.svg\";\nimport { ReactComponent as Ruby } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/ruby-plain.svg\";\nimport { ReactComponent as Rust } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/rust-plain.svg\";\nimport { ReactComponent as Matlab } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/matlab-plain.svg\";\nimport { ReactComponent as Ocaml } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/ocaml-plain.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Assembly = ({\n  fill\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"27px\",\n  height: \"24px\",\n  style: {\n    margin: '0px',\n    fill: 'red'\n  },\n  children: /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"4\",\n    y: \"18\",\n    fill: fill,\n    style: {\n      fontSize: '1.2rem',\n      width: 'fit-content',\n      height: 'fit-content',\n      marginRight: '-5px'\n    },\n    children: \"AS\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 5\n}, this);\n\n_c = Assembly;\nexport const data = [{\n  category: 'Soft Skills',\n  color: indigo[900],\n  data: [{\n    item: \"Leadership\",\n    icon: LeaderShip\n  }, {\n    item: \"Collaboration\",\n    icon: Collaboration\n  }, {\n    item: \"Customer Service\",\n    icon: CustomerService\n  }, {\n    item: \"Problem Solving\",\n    icon: ProblemSolving\n  }, {\n    item: \"Critical Thinking\",\n    icon: CriticalThinking\n  }, {\n    item: \"Creativity\",\n    icon: Creativity\n  }, {\n    item: \"Visual Thinking\",\n    icon: VisualThinking\n  }, {\n    item: \"Work Ethic\",\n    icon: WorkEthic\n  }, {\n    item: \"Enthusiasm\",\n    icon: Enthusiasm\n  }, {\n    item: \"Organization\",\n    icon: Organization\n  }]\n}, {\n  category: \"Languages\",\n  color: teal[900],\n  data: [{\n    item: \"Python\",\n    icon: Python\n  }, {\n    item: \"HTML\",\n    icon: HTML\n  }, {\n    item: \"JavaScript\",\n    icon: JavaScript\n  }, {\n    item: \"CSS\",\n    icon: CSS\n  }, {\n    item: \"C\",\n    icon: C\n  }, {\n    item: \"java\",\n    icon: Java\n  }, {\n    item: \"kotlin\",\n    icon: Kotlin\n  }, {\n    item: \"Ruby\",\n    icon: Ruby\n  }, {\n    item: \"Rust\",\n    icon: Rust\n  }, {\n    item: \"MatLab\",\n    icon: Matlab\n  }, {\n    item: \"Ocaml\",\n    icon: Ocaml\n  }, {\n    item: \"Assembly\",\n    icon: Assembly\n  }]\n} // {\n//     category: \"Frameworks\", color:'info', sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n//         { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n//         { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n//         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n//         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n//     ]\n// },\n// {\n//     category: \"Libraries\", color:'success', sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n//         { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n//         { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n//     ]\n// },\n// {\n//     category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n//         { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n//         { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n//         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n//         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n//     ]\n// },\n// {\n//     category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n//         { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n//         { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n//         { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n//         { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n//         { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n//     ]\n// },\n// {\n//     category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n//         { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n//         { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n//         { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n//         { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n//     ]\n// }\n];\n\nfunction Skills() {\n  _s();\n\n  const [masonWidth, setMasonWidth] = useState((window.innerWidth / 400).toFixed());\n  useEffect(() => {\n    const setWidth = () => setMasonWidth((window.innerWidth / 400).toFixed());\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    backgroundColor: \"re\",\n    sx: {\n      overflowX: 'auto',\n      p: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"70rem\",\n      mx: \"auto\",\n      backgroundColor: \"blu\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(Box, {\n            p: 0.8,\n            sx: {\n              backgroundColor: 'red'\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              component: Box,\n              elevation: \"2\",\n              sx: {\n                borderRadius: '0.5rem',\n                p: 1,\n                mx: 'auto',\n                maxWidth: 400\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                fontSize: \"1.3rem\",\n                fontWeight: \"500\",\n                color: item.color,\n                children: item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                justifyContent: \"center\",\n                mt: 0.5,\n                children: item.data.map(data => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    sx: {\n                      borderRadius: '0.5rem',\n                      fontSize: '1rem',\n                      color: item.color,\n                      borderColor: item.color\n                    },\n                    icon: /*#__PURE__*/_jsxDEV(Icon, {\n                      component: data.icon,\n                      fill: item.color\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 59\n                    }, this) // icon={<Icon className={data.icon} sx={{margin:'auto', fill:'#ffffff'}}>\n                    // <Typography fontWeight='500'>{data.iconName}</Typography></Icon>}\n                    ,\n                    label: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: data.item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 60\n                    }, this),\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this) // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n  //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n  //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n  //             <Box sx={{ backgroundColor: 'transparent' }}>\n  //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n  //                     p={0.4} color={indigo[900]} mb={2}>\n  //                     Hard Skills\n  //                 </Typography>\n  //                 <Stack spacing={1}>\n  //                     {/* Categories  */}\n  //                     {hardData.map(data =>\n  //                         <Stack alignItems='center'>\n  //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n  //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n  //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n  //                                     {data.data.map(item =>\n  //                                         // items \n  //                                         <Grid item>\n  //                                             <Chip item color='primary' sx={{\n  //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                                                 borderRadius: '0.3rem'\n  //                                             }}\n  //                                                 icon={<Icon className={item.icon}\n  //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n  //                                                 label={item.item} variant='outlined' />\n  //                                         </Grid>\n  //                                     )}\n  //                                 </Grid>\n  //                             </Paper>\n  //                         </Stack>\n  //                     )}\n  //                 </Stack>\n  //             </Box>\n  //         </Grid>\n  //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n  //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n  //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n  //                 Soft Skills\n  //             </Typography>\n  //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n  //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n  //                 {softData.map(data =>\n  //                     <Grid item>\n  //                         <Chip item color='primary' sx={{\n  //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                             borderRadius: '0.3rem', width: 'fit-content'\n  //                         }}\n  //                             icon={<Icon component='img' src={data.icon} />}\n  //                             label={data.item} variant='outlined' />\n  //                     </Grid>\n  //                 )}\n  //             </Box>\n  //         </Grid>\n  //     </Box>\n  // </Box>\n  ;\n}\n\n_s(Skills, \"wlBdTmedQIUKRVD74C2Rw/MwjR8=\");\n\n_c2 = Skills;\nexport default Skills;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Assembly\");\n$RefreshReg$(_c2, \"Skills\");","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js"],"names":["Box","Chip","Grid","Icon","Paper","Stack","SvgIcon","Typography","indigo","pink","teal","red","green","deepOrange","deepPurple","purple","Masonry","ResponsiveMasonry","useEffect","useState","Assembly","fill","margin","fontSize","width","height","marginRight","data","category","color","item","icon","LeaderShip","Collaboration","CustomerService","ProblemSolving","CriticalThinking","Creativity","VisualThinking","WorkEthic","Enthusiasm","Organization","Python","HTML","JavaScript","CSS","C","Java","Kotlin","Ruby","Rust","Matlab","Ocaml","Skills","masonWidth","setMasonWidth","window","innerWidth","toFixed","setWidth","overflowX","p","map","backgroundColor","borderRadius","mx","maxWidth","borderColor"],"mappings":"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","sourcesContent":["import { Box, Chip, Grid, Icon, Paper, Stack, SvgIcon, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport { ReactComponent as LeaderShip } from \"../images/leadership.svg\";\nimport { ReactComponent as Collaboration } from \"../images/support.svg\";\nimport { ReactComponent as CustomerService } from \"../images/customer-service.svg\";\nimport { ReactComponent as ProblemSolving } from \"../images/puzzle.svg\";\nimport { ReactComponent as CriticalThinking } from \"../images/thinking.svg\";\nimport { ReactComponent as Creativity } from \"../images/design-thinking.svg\";\nimport { ReactComponent as VisualThinking } from \"../images/storyboard.svg\";\nimport { ReactComponent as WorkEthic } from \"../images/struggle.svg\";\nimport { ReactComponent as Enthusiasm } from \"../images/business.svg\";\nimport { ReactComponent as Organization } from \"../images/project-plan.svg\";\nimport {ReactComponent as Python} from \"../images/python-plain.svg\";\nimport {ReactComponent as HTML} from \"../images/html5-plain.svg\";\nimport {ReactComponent as JavaScript} from \"../images/javascript-plain.svg\";\nimport {ReactComponent as CSS} from \"../images/css3-plain.svg\";\nimport {ReactComponent as C} from \"../images/c-plain.svg\";\nimport {ReactComponent as Java} from \"../images/java-plain.svg\";\nimport {ReactComponent as Kotlin} from \"../images/kotlin-plain.svg\";\nimport {ReactComponent as Ruby} from \"../images/ruby-plain.svg\";\nimport {ReactComponent as Rust} from \"../images/rust-plain.svg\";\nimport {ReactComponent as Matlab} from \"../images/matlab-plain.svg\";\nimport {ReactComponent as Ocaml} from \"../images/ocaml-plain.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { useEffect, useState } from \"react\";\n\n\nconst Assembly= ({fill}) => \n    <svg xmlns=\"http://www.w3.org/2000/svg\"  width='27px' height='24px' style={{margin:'0px', fill:'red'}}>\n        <text x='4' y='18' fill={fill}  style={{fontSize:'1.2rem', width:'fit-content', height:'fit-content', marginRight:'-5px'}}>AS</text>\n    </svg>\n\n\n\nexport const data = [\n    {\n        category: 'Soft Skills', color: indigo[900], data: [\n            { item: \"Leadership\", icon: LeaderShip },\n            { item: \"Collaboration\", icon: Collaboration },\n            { item: \"Customer Service\", icon: CustomerService },\n            { item: \"Problem Solving\", icon: ProblemSolving },\n            { item: \"Critical Thinking\", icon: CriticalThinking },\n            { item: \"Creativity\", icon: Creativity },\n            { item: \"Visual Thinking\", icon: VisualThinking },\n            { item: \"Work Ethic\", icon: WorkEthic },\n            { item: \"Enthusiasm\", icon: Enthusiasm },\n            { item: \"Organization\", icon: Organization },\n        ]\n    },\n\n    {\n        category: \"Languages\", color: teal[900], data: [\n            { item: \"Python\", icon: Python},\n            { item: \"HTML\", icon:HTML },\n            { item: \"JavaScript\",  icon: JavaScript},\n            { item: \"CSS\", icon:CSS },\n            { item: \"C\", icon:C},\n            { item: \"java\", icon:Java},\n            { item: \"kotlin\", icon:Kotlin},\n            { item: \"Ruby\", icon:Ruby },\n            { item: \"Rust\", icon:Rust},\n            { item: \"MatLab\", icon:Matlab },\n            { item: \"Ocaml\", icon:Ocaml},\n            {item: \"Assembly\", icon:Assembly}\n        ]\n    },\n\n    // {\n    //     category: \"Frameworks\", color:'info', sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n    //         { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n    //         { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n    //         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n    //         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Libraries\", color:'success', sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n    //         { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n    //         { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n    //         { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n    //         { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n    //         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n    //         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n    //         { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n    //         { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n    //         { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n    //         { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n    //         { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n    //         { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n    //         { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n    //         { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n    //         { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n    //     ]\n    // }\n];\n\n\nfunction Skills() {\n    const [masonWidth, setMasonWidth] = useState((window.innerWidth / 400).toFixed());\n\n    useEffect(() => {\n        const setWidth = () => setMasonWidth((window.innerWidth / 400).toFixed());\n\n    })\n\n    return (\n        <Box backgroundColor='re' sx={{ overflowX: 'auto', p: 1 }}>\n            <Box maxWidth='70rem' mx='auto' backgroundColor='blu'>\n                <ResponsiveMasonry>\n                    <Masonry  >\n                        {data.map(item =>\n                            <Box p={0.8} sx={{ backgroundColor: 'red' }}>\n                                <Paper component={Box} elevation='2' sx={{ borderRadius: '0.5rem', p: 1, mx: 'auto', maxWidth: 400 }}>\n                                    <Typography textAlign='center' fontSize='1.3rem' fontWeight='500' color={item.color}>{item.category}</Typography>\n                                    <Grid container spacing={1} justifyContent='center' mt={0.5}>\n                                        {item.data.map(data =>\n                                            <Grid item>\n                                                <Chip sx={{ borderRadius: '0.5rem', fontSize: '1rem', color: item.color, borderColor: item.color }}\n                                                    icon={<Icon component={data.icon} fill={item.color} />}\n                                                    // icon={<Icon className={data.icon} sx={{margin:'auto', fill:'#ffffff'}}>\n                                                    // <Typography fontWeight='500'>{data.iconName}</Typography></Icon>}\n                                                    label={<Typography>{data.item}</Typography>} variant='outlined' />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Paper>\n                            </Box>\n                        )}\n                    </Masonry>\n                </ResponsiveMasonry>\n            </Box >\n        </Box>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n        //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n        //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n        //             <Box sx={{ backgroundColor: 'transparent' }}>\n        //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n        //                     p={0.4} color={indigo[900]} mb={2}>\n        //                     Hard Skills\n        //                 </Typography>\n\n        //                 <Stack spacing={1}>\n        //                     {/* Categories  */}\n        //                     {hardData.map(data =>\n\n        //                         <Stack alignItems='center'>\n        //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n        //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n        //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n        //                                     {data.data.map(item =>\n        //                                         // items \n        //                                         <Grid item>\n        //                                             <Chip item color='primary' sx={{\n        //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                                                 borderRadius: '0.3rem'\n        //                                             }}\n        //                                                 icon={<Icon className={item.icon}\n        //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n        //                                                 label={item.item} variant='outlined' />\n        //                                         </Grid>\n        //                                     )}\n        //                                 </Grid>\n        //                             </Paper>\n        //                         </Stack>\n\n        //                     )}\n        //                 </Stack>\n        //             </Box>\n        //         </Grid>\n        //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n        //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n        //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n        //                 Soft Skills\n        //             </Typography>\n        //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n        //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n        //                 {softData.map(data =>\n        //                     <Grid item>\n        //                         <Chip item color='primary' sx={{\n        //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                             borderRadius: '0.3rem', width: 'fit-content'\n        //                         }}\n        //                             icon={<Icon component='img' src={data.icon} />}\n        //                             label={data.item} variant='outlined' />\n        //                     </Grid>\n        //                 )}\n        //             </Box>\n\n        //         </Grid>\n        //     </Box>\n        // </Box>\n    )\n}\n\nexport default Skills;"]},"metadata":{},"sourceType":"module"}