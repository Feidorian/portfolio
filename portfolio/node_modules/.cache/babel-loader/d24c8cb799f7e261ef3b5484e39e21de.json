{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Resume.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Stack, Slide } from \"@material-ui/core\";\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\nimport { useState, useEffect } from 'react';\nimport { indigo } from '@material-ui/core/colors';\nimport resume from \"../images/resumeTemp.pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Resume() {\n  _s();\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [documentSize, setDocumentSize] = useState(null);\n\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n\n  useEffect(() => {\n    const resizeDocument = () => window.innerWidth >= 950 ? setDocumentSize(900) : setDocumentSize(window.innerWidth * 0.93);\n\n    resizeDocument();\n    window.addEventListener('resize', resizeDocument);\n    return () => window.removeEventListener('resize', resizeDocument);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: Stack,\n    alignItems: \"center\",\n    spacing: 1,\n    backgroundColor: \"re\",\n    p: 1,\n    overflow: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        component: \"a\",\n        variant: \"contained\",\n        size: \"large\",\n        color: \"success\",\n        href: resume,\n        target: \"_blank\",\n        download: \"resume_Brian_Ojoh_Mile\",\n        children: \"Download Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        alignItems: \"center\",\n        children: Array.from({\n          length: numPages\n        }, (_, i) => i + 1).map(item => /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            width: 'fit-content'\n          },\n          variant: \"outlined\",\n          color: item === pageNumber ? 'error' : 'primary',\n          onClick: () => setPageNumber(item),\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        'canvas': {\n          borderRadius: '0.7rem',\n          border: `0.2rem solid ${indigo[900]}`\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: resume,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          width: documentSize,\n          pageNumber: pageNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Resume, \"eAvX8EObDjKDRb4V4qVmYgV3FzE=\");\n\n_c = Resume;\nexport default Resume;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume\");","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Resume.js"],"names":["Box","Button","Stack","Slide","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","useState","useEffect","indigo","resume","Resume","numPages","setNumPages","pageNumber","setPageNumber","documentSize","setDocumentSize","onDocumentLoadSuccess","resizeDocument","window","innerWidth","addEventListener","removeEventListener","Array","from","length","_","i","map","item","width","borderRadius","border"],"mappings":"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","sourcesContent":["import { Box, Button, Stack, Slide } from \"@material-ui/core\";\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\nimport { useState, useEffect } from 'react';\nimport {indigo} from '@material-ui/core/colors';\nimport resume from \"../images/resumeTemp.pdf\";\n\n\nfunction Resume() {\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [documentSize, setDocumentSize] = useState(null);\n\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    };\n\n\n    useEffect(() => {\n        const resizeDocument = () => window.innerWidth >= 950 ? setDocumentSize(900) : setDocumentSize(window.innerWidth * (0.93));\n        resizeDocument();\n        window.addEventListener('resize', resizeDocument);\n        return () => window.removeEventListener('resize', resizeDocument);\n    })\n\n    return (\n        <Box component={Stack} alignItems='center' spacing={1} backgroundColor='re' p={1} overflow='auto'>\n            <Box>\n                <Button component='a' variant='contained' size='large' color='success' href={resume} target='_blank' download='resume_Brian_Ojoh_Mile'>Download Resume</Button>\n            </Box>\n            <Box>\n                <Stack direction='row' spacing={1} alignItems='center'>\n                    {Array.from({ length: numPages }, (_, i) => i + 1).map(item =>\n                        <Button sx={{ width: 'fit-content' }} variant='outlined' color={item === pageNumber ? 'error' : 'primary'}\n                            onClick={() => setPageNumber(item)}>\n                            {item}\n                        </Button>\n                    )}\n                </Stack>\n            </Box>\n\n            <Box sx={{ 'canvas': { borderRadius: '0.7rem', border:`0.2rem solid ${indigo[900]}`} }}>\n                <Document\n                    file={resume}\n                    onLoadSuccess={onDocumentLoadSuccess}>\n                    <Page width={documentSize} pageNumber={pageNumber} />\n                </Document>\n            </Box>\n\n\n        </Box>\n    )\n}\n\n\nexport default Resume;"]},"metadata":{},"sourceType":"module"}