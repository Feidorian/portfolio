{"ast":null,"code":"import _defineProperty from \"/home/brian/portfolio/portfolio-app-beta/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      indeterminate = styleProps.indeterminate,\n      color = styleProps.color;\n  var slots = {\n    root: ['root', indeterminate && 'indeterminate', \"color\".concat(capitalize(color))]\n  };\n  var composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nvar CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return rootShouldForwardProp(prop) || prop === 'classes';\n  },\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var styleProps = props.styleProps;\n    return [styles.root, styleProps.indeterminate && styles.indeterminate, styleProps.color !== 'default' && styles[\"color\".concat(capitalize(styleProps.color))]];\n  }\n})(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme,\n      styleProps = _ref.styleProps;\n  return _extends({\n    color: theme.palette.text.secondary,\n    '&:hover': _extends({}, !styleProps.disableRipple && {\n      backgroundColor: alpha(styleProps.color === 'default' ? theme.palette.action.active : theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }, styleProps.color !== 'default' && (_ref2 = {}, _defineProperty(_ref2, \"&.\".concat(checkboxClasses.checked, \", &.\").concat(checkboxClasses.indeterminate), {\n    color: theme.palette[styleProps.color].main\n  }), _defineProperty(_ref2, \"&.\".concat(checkboxClasses.disabled), {\n    color: theme.palette.action.disabled\n  }), _ref2));\n});\n\nvar defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nvar defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nvar defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  var styleProps = _extends({}, props, {\n    color: color,\n    indeterminate: indeterminate,\n    size: size\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size !== 'medium' ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size !== 'medium' ? size : indeterminateIcon.props.fontSize\n    }),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'succes', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/node_modules/@material-ui/core/Checkbox/Checkbox.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","refType","unstable_composeClasses","composeClasses","alpha","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","IndeterminateCheckBoxIcon","capitalize","useThemeProps","styled","rootShouldForwardProp","checkboxClasses","getCheckboxUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","classes","indeterminate","color","slots","root","composedClasses","CheckboxRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","theme","palette","text","secondary","disableRipple","backgroundColor","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","type","cloneElement","fontSize","undefined","process","env","NODE_ENV","propTypes","bool","node","object","oneOfType","oneOf","string","defaultChecked","id","inputRef","onChange","func","required","sx","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, styleProps.indeterminate && styles.indeterminate, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary,\n  '&:hover': _extends({}, !styleProps.disableRipple && {\n    backgroundColor: alpha(styleProps.color === 'default' ? theme.palette.action.active : theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity)\n  }, {\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  })\n}, styleProps.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[styleProps.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const styleProps = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size !== 'medium' ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size !== 'medium' ? size : indeterminateIcon.props.fontSize\n    }),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'succes', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}