{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Courses.js\";\nimport { Box, Grid, Paper, Stack, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, grey } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  code: 'CMSC 411',\n  name: \"Computer Systems Architecture\",\n  term: \"UMD Spring 2021\",\n  summary: \"Input/output processors and techniques. Intra-system communication, \\\n        buses, caches. Addressing and memory hierarchies. Microprogramming, parallelism, and pipelining.\",\n  concepts: \"C, linux\"\n}, {\n  code: 'CMSC 389N',\n  name: \"A Introduction to PHP and Javascript\",\n  term: \"UMD Spring 2021\",\n  summary: \"An introduction to the development of single page Web-based applications (SPA's) using JavaScript \\\n                for both the front end client and back-end api/service. We will be devleoping applications using a micro-service \\\n                architecture pattern and discussing throughout the evolution of web application architectures and current trends.\",\n  concepts: \"HTML, CSS, Javascript, Node.js, React, Boostrap, express\"\n}, {\n  code: 'CMSC 420',\n  name: \"Advanced Data Structures\",\n  term: \"PENDING\",\n  summary: \"Description, properties, and storage allocation functions of data structures including balanced binary trees, \\\n        B-Trees, hash tables, skiplists, tries, KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications \\\n        from areas such as String Processing, Computer Graphics, Information Retrieval, Computer Networks, Computer Vision, and Operating Systems.\",\n  concepts: \"jAVA\"\n}, {\n  code: 'CMSC 420',\n  name: \"Advanced Data Structures\",\n  term: \"PENDING\",\n  summary: \"Description, properties, and storage allocation functions of data structures including balanced binary trees, \\\n        B-Trees, hash tables, skiplists, tries, KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications \\\n        from areas such as String Processing, Computer Graphics, Information Retrieval, Computer Networks, Computer Vision, and Operating Systems.\",\n  concepts: \"jAVA\"\n}, {\n  code: 'CMSC 351',\n  name: \"Algorithms\",\n  term: \"Pending\",\n  summary: \"A systematic study of the complexity of some elementary algorithms related to sorting, \\\n        graphs and trees, and combinatorics. Algorithms are analyzed using mathematical techniques to solve recurrences and summations.\"\n}, {\n  code: 'CMSC 330',\n  name: \"Organization of Programming Languages\",\n  term: \"Pending\",\n  summary: \"A study of programming languages, including their syntax, semantics, and implementation. Several different \\\n        models of languages are discussed, including dynamic, scripting functional \\\n        , and memory safe systems programming. Explores language features such as formal syntax, scoping \\\n            and binding of variables, higher-order programming, typing, and type polymorphism. Introduces finite automata, context \\\n            free grammar, parsing, lambda calculus, and basics of security attacks and software security.\",\n  concepts: \"Ocaml, Ruby, Rust\"\n}, {\n  code: 'CMSC 320',\n  name: \"Introduction to Data Science\",\n  term: \"UMD Spring 2021\",\n  summary: \"An introduction to the data science pipeline, i.e., the end-to-end process of going from unstructured, \\\n        messy data to knowledge and actionable insights. Provides a broad overview of several topics including statistical \\\n        data analysis, basic data mining and machine learning algorithms, large-scale data management, cloud computing, and \\\n        information visualization.\",\n  concepts: \"Python, Docker, Jupyter\"\n}, {\n  code: 'CMSC 250',\n  name: \"Discrete Structures\",\n  term: \"Spring 2018\",\n  summary: \"Fundamental mathematical concepts related to computer science, including finite and infinite sets, \\\n        relations, functions, and propositional logic. Introduction to other techniques, \\\n        modeling and solving problems in computer science. Introduction to permutations, combinations, \\\n        graphs, and trees with selected applications.\",\n  concepts: \"\"\n}, {\n  code: 'CMSC 216',\n  name: \"Introduction to Computer Systems\",\n  term: \"Spring 2018\",\n  summary: \"Introduction to the interaction between user programs and the operating system/hardware. \\\n        Major topics include C programming, introductory systems programming, and assembly language. \\\n        Other concepts covered include UNIX, machine data representation, thread management, optimization, and virtual memory. \\\n        Programming is done in the Linux Environment.\",\n  concepts: \"C, Assembly, Linux, MobaXterm(remote SSH)\"\n}, {\n  code: 'CMSC 132',\n  name: \"Object Oriented Programming II\",\n  term: \"UMD Spring 2018\",\n  summary: \"Introduction to use of computers to solve problems using software engineering principles. \\\n        Design, build, test, and debug medium -size software systems and learn to use relevant tools. \\\n        Use object-oriented methods to create effective and efficient problem solutions. \\\n        Use and implement application programming interfaces (APIs). Programming done in Java\",\n  concepts: \"Java, Eclipse IDE\"\n}, {\n  code: 'CMSC 131',\n  name: \"Object Oriented Programming I\",\n  term: \"UMD Fall 2017\",\n  summary: \"Introduction to programming and computer science. \\\n        Emphasizes understanding and implementation of applications using object- oriented techniques. \\\n        Develops skills such as program design and testing as well as implementation of programs using a graphical IDE. \\\n        Programming done in Java.\",\n  concepts: \"Java, Eclipse IDE\"\n}];\n\nfunction Courses() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    backgroundColor: \"re\",\n    width: \"100%\",\n    p: 2,\n    overflow: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 3,\n      columnSpacing: 1,\n      mx: \"auto\",\n      backgroundColor: \"blu\",\n      justifyContent: \"center\",\n      width: 3 / 4,\n      flexWrap: \"wrap\",\n      children: data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        width: {\n          xs: 1,\n          sm: 6 / 12,\n          md: 6 / 12,\n          lg: 4 / 12,\n          xl: 3 / 12\n        },\n        mb: 1,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: \"2\",\n          component: Stack,\n          spacing: 3,\n          sx: {\n            p: 1,\n            height: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: item.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: item.term\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            fontSize: \"1.2rem\",\n            fontWeight: \"500\",\n            color: teal[900],\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            color: indigo[900],\n            children: item.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            color: deepOrange[900],\n            children: item.concepts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Courses;\n;\nexport default Courses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Courses.js"],"names":["Box","Grid","Paper","Stack","Typography","indigo","pink","teal","red","green","deepOrange","deepPurple","grey","data","code","name","term","summary","concepts","Courses","map","item","xs","sm","md","lg","xl","p","height"],"mappings":"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","sourcesContent":["import { Box, Grid, Paper, Stack, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, grey } from '@material-ui/core/colors';\n\nconst data =[\n    {\n        code: 'CMSC 411',\n        name: \"Computer Systems Architecture\",\n        term: \"UMD Spring 2021\",\n        summary: \"Input/output processors and techniques. Intra-system communication, \\\n        buses, caches. Addressing and memory hierarchies. Microprogramming, parallelism, and pipelining.\",\n        concepts: \"C, linux\"\n    },\n    {\n        code: 'CMSC 389N',\n        name: \"A Introduction to PHP and Javascript\",\n        term: \"UMD Spring 2021\",\n        summary: \"An introduction to the development of single page Web-based applications (SPA's) using JavaScript \\\n                for both the front end client and back-end api/service. We will be devleoping applications using a micro-service \\\n                architecture pattern and discussing throughout the evolution of web application architectures and current trends.\",\n        concepts: \"HTML, CSS, Javascript, Node.js, React, Boostrap, express\"\n    },\n    {\n        code: 'CMSC 420',\n        name: \"Advanced Data Structures\",\n        term: \"PENDING\",\n        summary: \"Description, properties, and storage allocation functions of data structures including balanced binary trees, \\\n        B-Trees, hash tables, skiplists, tries, KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications \\\n        from areas such as String Processing, Computer Graphics, Information Retrieval, Computer Networks, Computer Vision, and Operating Systems.\",\n        concepts: \"jAVA\"\n    },\n    {\n        code: 'CMSC 420',\n        name: \"Advanced Data Structures\",\n        term: \"PENDING\",\n        summary: \"Description, properties, and storage allocation functions of data structures including balanced binary trees, \\\n        B-Trees, hash tables, skiplists, tries, KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications \\\n        from areas such as String Processing, Computer Graphics, Information Retrieval, Computer Networks, Computer Vision, and Operating Systems.\",\n        concepts: \"jAVA\"\n    },\n    {\n        code: 'CMSC 351',\n        name: \"Algorithms\",\n        term: \"Pending\",\n        summary: \"A systematic study of the complexity of some elementary algorithms related to sorting, \\\n        graphs and trees, and combinatorics. Algorithms are analyzed using mathematical techniques to solve recurrences and summations.\",\n    },\n    {\n        code: 'CMSC 330',\n        name: \"Organization of Programming Languages\",\n        term: \"Pending\",\n        summary: \"A study of programming languages, including their syntax, semantics, and implementation. Several different \\\n        models of languages are discussed, including dynamic, scripting functional \\\n        , and memory safe systems programming. Explores language features such as formal syntax, scoping \\\n            and binding of variables, higher-order programming, typing, and type polymorphism. Introduces finite automata, context \\\n            free grammar, parsing, lambda calculus, and basics of security attacks and software security.\",\n        concepts: \"Ocaml, Ruby, Rust\"\n    },\n   \n    {\n        code: 'CMSC 320',\n        name: \"Introduction to Data Science\",\n        term: \"UMD Spring 2021\",\n        summary: \"An introduction to the data science pipeline, i.e., the end-to-end process of going from unstructured, \\\n        messy data to knowledge and actionable insights. Provides a broad overview of several topics including statistical \\\n        data analysis, basic data mining and machine learning algorithms, large-scale data management, cloud computing, and \\\n        information visualization.\",\n        concepts: \"Python, Docker, Jupyter\"\n    },\n    {\n        code: 'CMSC 250',\n        name: \"Discrete Structures\",\n        term: \"Spring 2018\",\n        summary: \"Fundamental mathematical concepts related to computer science, including finite and infinite sets, \\\n        relations, functions, and propositional logic. Introduction to other techniques, \\\n        modeling and solving problems in computer science. Introduction to permutations, combinations, \\\n        graphs, and trees with selected applications.\",\n        concepts: \"\"\n    },\n\n    {\n        code: 'CMSC 216',\n        name: \"Introduction to Computer Systems\",\n        term: \"Spring 2018\",\n        summary: \"Introduction to the interaction between user programs and the operating system/hardware. \\\n        Major topics include C programming, introductory systems programming, and assembly language. \\\n        Other concepts covered include UNIX, machine data representation, thread management, optimization, and virtual memory. \\\n        Programming is done in the Linux Environment.\",\n        concepts: \"C, Assembly, Linux, MobaXterm(remote SSH)\"\n    },\n\n    {\n        code: 'CMSC 132',\n        name: \"Object Oriented Programming II\",\n        term: \"UMD Spring 2018\",\n        summary: \"Introduction to use of computers to solve problems using software engineering principles. \\\n        Design, build, test, and debug medium -size software systems and learn to use relevant tools. \\\n        Use object-oriented methods to create effective and efficient problem solutions. \\\n        Use and implement application programming interfaces (APIs). Programming done in Java\",\n        concepts: \"Java, Eclipse IDE\"\n    },\n\n    {\n        code: 'CMSC 131',\n        name: \"Object Oriented Programming I\",\n        term: \"UMD Fall 2017\",\n        summary: \"Introduction to programming and computer science. \\\n        Emphasizes understanding and implementation of applications using object- oriented techniques. \\\n        Develops skills such as program design and testing as well as implementation of programs using a graphical IDE. \\\n        Programming done in Java.\",\n        concepts: \"Java, Eclipse IDE\"\n    },\n   \n\n\n    \n]\n\n\nfunction Courses() {\n    return (\n        <Box backgroundColor='re' width='100%' p={2} overflow='auto'>\n            <Grid container rowSpacing={3} columnSpacing={1} mx='auto' backgroundColor='blu' justifyContent='center' width={3/4} flexWrap='wrap'>\n            {data.map(item =>\n                <Grid item width={{xs:1, sm:6/12, md:6/12, lg:4/12, xl:3/12}}  mb={1}>\n                    <Paper elevation='2' component={Stack} spacing={3}  sx={{p:1, height:1}} >\n                        <Stack direction='row' justifyContent='space-between'> \n                            <Typography>{item.code}</Typography>\n                            <Typography>{item.term}</Typography>\n                        </Stack>\n                        <Typography textAlign='center' fontSize='1.2rem' fontWeight='500' color={teal[900]}>{item.name}</Typography>\n                        <Typography textAlign='center' color={indigo[900]}>{item.summary}</Typography>\n                        <Typography textAlign='center' color={deepOrange[900]} >{item.concepts}</Typography>\n                    </Paper>\n                </Grid>\n                )}\n            </Grid>\n        </Box>\n    )\n};\n\nexport default Courses;"]},"metadata":{},"sourceType":"module"}