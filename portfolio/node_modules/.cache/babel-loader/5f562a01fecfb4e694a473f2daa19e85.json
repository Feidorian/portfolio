{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Chip, Grid, Icon, Paper, Stack, SvgIcon, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport { ReactComponent as LeaderShip } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/leadership.svg\";\nimport { ReactComponent as Collaboration } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/support.svg\";\nimport { ReactComponent as CustomerService } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/customer-service.svg\";\nimport { ReactComponent as ProblemSolving } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/puzzle.svg\";\nimport { ReactComponent as CriticalThinking } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/thinking.svg\";\nimport { ReactComponent as Creativity } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/design-thinking.svg\";\nimport { ReactComponent as VisualThinking } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/storyboard.svg\";\nimport { ReactComponent as WorkEthic } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/struggle.svg\";\nimport { ReactComponent as Enthusiasm } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/business.svg\";\nimport { ReactComponent as Organization } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/project-plan.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Python = ({\n  fill\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 128 128\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    fill: fill,\n    d: \"M49.33 62h29.159C86.606 62 93 55.132 93 46.981V19.183c0-7.912-6.632-13.856-14.555-15.176-5.014-.835-10.195-1.215-15.187-1.191-4.99.023-9.612.448-13.805 1.191C37.098 6.188 35 10.758 35 19.183V30h29v4H23.776c-8.484 0-15.914 5.108-18.237 14.811-2.681 11.12-2.8 17.919 0 29.53C7.614 86.983 12.569 93 21.054 93H31V79.952C31 70.315 39.428 62 49.33 62zm-1.838-39.11c-3.026 0-5.478-2.479-5.478-5.545 0-3.079 2.451-5.581 5.478-5.581 3.015 0 5.479 2.502 5.479 5.581-.001 3.066-2.465 5.545-5.479 5.545zm74.789 25.921C120.183 40.363 116.178 34 107.682 34H97v12.981C97 57.031 88.206 65 78.489 65H49.33C41.342 65 35 72.326 35 80.326v27.8c0 7.91 6.745 12.564 14.462 14.834 9.242 2.717 17.994 3.208 29.051 0C85.862 120.831 93 116.549 93 108.126V97H64v-4h43.682c8.484 0 11.647-5.776 14.599-14.66 3.047-9.145 2.916-17.799 0-29.529zm-41.955 55.606c3.027 0 5.479 2.479 5.479 5.547 0 3.076-2.451 5.579-5.479 5.579-3.015 0-5.478-2.502-5.478-5.579 0-3.068 2.463-5.547 5.478-5.547z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 1\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 28\n}, this);\n\n_c = Python;\nexport const data = [{\n  category: 'Soft Skills',\n  color: indigo[900],\n  data: [{\n    item: \"Leadership\",\n    icon: LeaderShip\n  }, {\n    item: \"Collaboration\",\n    icon: Collaboration\n  }, {\n    item: \"Customer Service\",\n    icon: CustomerService\n  }, {\n    item: \"Problem Solving\",\n    icon: ProblemSolving\n  }, {\n    item: \"Critical Thinking\",\n    icon: CriticalThinking\n  }, {\n    item: \"Creativity\",\n    icon: Creativity\n  }, {\n    item: \"Visual Thinking\",\n    icon: VisualThinking\n  }, {\n    item: \"Work Ethic\",\n    icon: WorkEthic\n  }, {\n    item: \"Enthusiasm\",\n    icon: Enthusiasm\n  }, {\n    item: \"Organization\",\n    icon: Organization\n  }]\n}, {\n  category: \"Languages\",\n  color: indigo[900],\n  data: [{\n    item: \"Python\",\n    icon: Python\n  } // { item: \"HTML\", color: 'bg-black text-white', icon: \"devicon-html5-plain\" },\n  // { item: \"JavaScript\", color: 'bg-black text-white', icon: \"devicon-javascript-plain\" },\n  // { item: \"CSS\", color: 'bg-black text-white', icon: \"devicon-css3-plain\" },\n  // { item: \"C\", color: 'bg-black text-white', icon: \"devicon-c-plain\" },\n  // { item: \"java\", color: 'bg-black text-white', icon: \"devicon-java-plain\" },\n  // { item: \"kotlin\", color: 'bg-black text-white', icon: \"devicon-kotlin-plain\" },\n  // { item: \"Ruby\", color: 'bg-black text-white', icon: \"devicon-ruby-plain\" },\n  // { item: \"Rust\", color: 'bg-black text-white', icon: \"devicon-rust-plain\" },\n  // { item: \"MatLab\", color: 'bg-black text-white', icon: \"devicon-matlab-plain\" },\n  // { item: \"Ocaml\", color: 'bg-black text-white', icon: \"devicon-ocaml-plain\" },\n  // {\n  //     item: \"Assembly\", color: 'bg-black text-white',\n  //     iconName: \"AS\"\n  // },\n  ]\n} // {\n//     category: \"Frameworks\", color:'info', sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n//         { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n//         { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n//         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n//         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n//     ]\n// },\n// {\n//     category: \"Libraries\", color:'success', sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n//         { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n//         { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n//     ]\n// },\n// {\n//     category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n//         { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n//         { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n//         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n//         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n//     ]\n// },\n// {\n//     category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n//         { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n//         { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n//         { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n//         { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n//         { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n//     ]\n// },\n// {\n//     category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n//         { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n//         { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n//         { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n//         { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n//     ]\n// }\n];\n\nfunction Skills() {\n  _s();\n\n  const [masonWidth, setMasonWidth] = useState((window.innerWidth / 400).toFixed());\n  useEffect(() => {\n    const setWidth = () => setMasonWidth((window.innerWidth / 400).toFixed());\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    backgroundColor: \"re\",\n    sx: {\n      overflowX: 'auto',\n      p: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"70rem\",\n      mx: \"auto\",\n      backgroundColor: \"blu\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(Box, {\n            p: 0.8,\n            sx: {\n              backgroundColor: 'red'\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              component: Box,\n              elevation: \"2\",\n              sx: {\n                borderRadius: '0.5rem',\n                p: 1,\n                mx: 'auto',\n                maxWidth: 400\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                fontSize: \"1.3rem\",\n                fontWeight: \"500\",\n                color: item.color,\n                children: item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                justifyContent: \"center\",\n                mt: 0.5,\n                children: item.data.map(data => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    sx: {\n                      borderRadius: '0.5rem',\n                      fontSize: '1rem',\n                      color: item.color,\n                      borderColor: item.color\n                    },\n                    icon: /*#__PURE__*/_jsxDEV(Icon, {\n                      component: data.icon,\n                      fill: item.color\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 59\n                    }, this) // icon={<Icon className={data.icon} sx={{margin:'auto', fill:'#ffffff'}}>\n                    // <Typography fontWeight='500'>{data.iconName}</Typography></Icon>}\n                    ,\n                    label: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: data.item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 60\n                    }, this),\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this) // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n  //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n  //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n  //             <Box sx={{ backgroundColor: 'transparent' }}>\n  //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n  //                     p={0.4} color={indigo[900]} mb={2}>\n  //                     Hard Skills\n  //                 </Typography>\n  //                 <Stack spacing={1}>\n  //                     {/* Categories  */}\n  //                     {hardData.map(data =>\n  //                         <Stack alignItems='center'>\n  //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n  //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n  //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n  //                                     {data.data.map(item =>\n  //                                         // items \n  //                                         <Grid item>\n  //                                             <Chip item color='primary' sx={{\n  //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                                                 borderRadius: '0.3rem'\n  //                                             }}\n  //                                                 icon={<Icon className={item.icon}\n  //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n  //                                                 label={item.item} variant='outlined' />\n  //                                         </Grid>\n  //                                     )}\n  //                                 </Grid>\n  //                             </Paper>\n  //                         </Stack>\n  //                     )}\n  //                 </Stack>\n  //             </Box>\n  //         </Grid>\n  //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n  //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n  //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n  //                 Soft Skills\n  //             </Typography>\n  //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n  //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n  //                 {softData.map(data =>\n  //                     <Grid item>\n  //                         <Chip item color='primary' sx={{\n  //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                             borderRadius: '0.3rem', width: 'fit-content'\n  //                         }}\n  //                             icon={<Icon component='img' src={data.icon} />}\n  //                             label={data.item} variant='outlined' />\n  //                     </Grid>\n  //                 )}\n  //             </Box>\n  //         </Grid>\n  //     </Box>\n  // </Box>\n  ;\n}\n\n_s(Skills, \"wlBdTmedQIUKRVD74C2Rw/MwjR8=\");\n\n_c2 = Skills;\nexport default Skills;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Python\");\n$RefreshReg$(_c2, \"Skills\");","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js"],"names":["Box","Chip","Grid","Icon","Paper","Stack","SvgIcon","Typography","indigo","pink","teal","red","green","deepOrange","deepPurple","purple","Masonry","ResponsiveMasonry","useEffect","useState","Python","fill","data","category","color","item","icon","LeaderShip","Collaboration","CustomerService","ProblemSolving","CriticalThinking","Creativity","VisualThinking","WorkEthic","Enthusiasm","Organization","Skills","masonWidth","setMasonWidth","window","innerWidth","toFixed","setWidth","overflowX","p","map","backgroundColor","borderRadius","mx","maxWidth","fontSize","borderColor"],"mappings":"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","sourcesContent":["import { Box, Chip, Grid, Icon, Paper, Stack, SvgIcon, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport { ReactComponent as LeaderShip } from \"../images/leadership.svg\";\nimport { ReactComponent as Collaboration } from \"../images/support.svg\";\nimport { ReactComponent as CustomerService } from \"../images/customer-service.svg\";\nimport { ReactComponent as ProblemSolving } from \"../images/puzzle.svg\";\nimport { ReactComponent as CriticalThinking } from \"../images/thinking.svg\";\nimport { ReactComponent as Creativity } from \"../images/design-thinking.svg\";\nimport { ReactComponent as VisualThinking } from \"../images/storyboard.svg\";\nimport { ReactComponent as WorkEthic } from \"../images/struggle.svg\";\nimport { ReactComponent as Enthusiasm } from \"../images/business.svg\";\nimport { ReactComponent as Organization } from \"../images/project-plan.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { useEffect, useState } from \"react\";\n\n\nconst Python = ({fill}) => <svg viewBox=\"0 0 128 128\">\n<path fill={fill} d=\"M49.33 62h29.159C86.606 62 93 55.132 93 46.981V19.183c0-7.912-6.632-13.856-14.555-15.176-5.014-.835-10.195-1.215-15.187-1.191-4.99.023-9.612.448-13.805 1.191C37.098 6.188 35 10.758 35 19.183V30h29v4H23.776c-8.484 0-15.914 5.108-18.237 14.811-2.681 11.12-2.8 17.919 0 29.53C7.614 86.983 12.569 93 21.054 93H31V79.952C31 70.315 39.428 62 49.33 62zm-1.838-39.11c-3.026 0-5.478-2.479-5.478-5.545 0-3.079 2.451-5.581 5.478-5.581 3.015 0 5.479 2.502 5.479 5.581-.001 3.066-2.465 5.545-5.479 5.545zm74.789 25.921C120.183 40.363 116.178 34 107.682 34H97v12.981C97 57.031 88.206 65 78.489 65H49.33C41.342 65 35 72.326 35 80.326v27.8c0 7.91 6.745 12.564 14.462 14.834 9.242 2.717 17.994 3.208 29.051 0C85.862 120.831 93 116.549 93 108.126V97H64v-4h43.682c8.484 0 11.647-5.776 14.599-14.66 3.047-9.145 2.916-17.799 0-29.529zm-41.955 55.606c3.027 0 5.479 2.479 5.479 5.547 0 3.076-2.451 5.579-5.479 5.579-3.015 0-5.478-2.502-5.478-5.579 0-3.068 2.463-5.547 5.478-5.547z\"></path>\n</svg>\n\n\n\nexport const data = [\n    {\n        category: 'Soft Skills', color: indigo[900], data: [\n            { item: \"Leadership\", icon: LeaderShip },\n            { item: \"Collaboration\", icon: Collaboration },\n            { item: \"Customer Service\", icon: CustomerService },\n            { item: \"Problem Solving\", icon: ProblemSolving },\n            { item: \"Critical Thinking\", icon: CriticalThinking },\n            { item: \"Creativity\", icon: Creativity },\n            { item: \"Visual Thinking\", icon: VisualThinking },\n            { item: \"Work Ethic\", icon: WorkEthic },\n            { item: \"Enthusiasm\", icon: Enthusiasm },\n            { item: \"Organization\", icon: Organization },\n        ]\n    },\n\n    {\n        category: \"Languages\", color: indigo[900], data: [\n            { item: \"Python\", icon: Python},\n            // { item: \"HTML\", color: 'bg-black text-white', icon: \"devicon-html5-plain\" },\n            // { item: \"JavaScript\", color: 'bg-black text-white', icon: \"devicon-javascript-plain\" },\n            // { item: \"CSS\", color: 'bg-black text-white', icon: \"devicon-css3-plain\" },\n            // { item: \"C\", color: 'bg-black text-white', icon: \"devicon-c-plain\" },\n            // { item: \"java\", color: 'bg-black text-white', icon: \"devicon-java-plain\" },\n            // { item: \"kotlin\", color: 'bg-black text-white', icon: \"devicon-kotlin-plain\" },\n            // { item: \"Ruby\", color: 'bg-black text-white', icon: \"devicon-ruby-plain\" },\n            // { item: \"Rust\", color: 'bg-black text-white', icon: \"devicon-rust-plain\" },\n            // { item: \"MatLab\", color: 'bg-black text-white', icon: \"devicon-matlab-plain\" },\n            // { item: \"Ocaml\", color: 'bg-black text-white', icon: \"devicon-ocaml-plain\" },\n            // {\n            //     item: \"Assembly\", color: 'bg-black text-white',\n            //     iconName: \"AS\"\n            // },\n        ]\n    },\n\n    // {\n    //     category: \"Frameworks\", color:'info', sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n    //         { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n    //         { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n    //         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n    //         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Libraries\", color:'success', sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n    //         { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n    //         { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n    //         { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n    //         { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n    //         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n    //         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n    //         { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n    //         { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n    //         { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n    //         { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n    //         { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n    //         { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n    //         { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n    //         { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n    //         { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n    //     ]\n    // }\n];\n\n\nfunction Skills() {\n    const [masonWidth, setMasonWidth] = useState((window.innerWidth / 400).toFixed());\n\n    useEffect(() => {\n        const setWidth = () => setMasonWidth((window.innerWidth / 400).toFixed());\n\n    })\n\n    return (\n        <Box backgroundColor='re' sx={{ overflowX: 'auto', p: 1 }}>\n            <Box maxWidth='70rem' mx='auto' backgroundColor='blu'>\n                <ResponsiveMasonry>\n                    <Masonry  >\n                        {data.map(item =>\n                            <Box p={0.8} sx={{ backgroundColor: 'red' }}>\n                                <Paper component={Box} elevation='2' sx={{ borderRadius: '0.5rem', p: 1, mx: 'auto', maxWidth: 400 }}>\n                                    <Typography textAlign='center' fontSize='1.3rem' fontWeight='500' color={item.color}>{item.category}</Typography>\n                                    <Grid container spacing={1} justifyContent='center' mt={0.5}>\n                                        {item.data.map(data =>\n                                            <Grid item>\n                                                <Chip sx={{ borderRadius: '0.5rem', fontSize: '1rem', color: item.color, borderColor: item.color }}\n                                                    icon={<Icon component={data.icon} fill={item.color} />}\n                                                    // icon={<Icon className={data.icon} sx={{margin:'auto', fill:'#ffffff'}}>\n                                                    // <Typography fontWeight='500'>{data.iconName}</Typography></Icon>}\n                                                    label={<Typography>{data.item}</Typography>} variant='outlined' />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Paper>\n                            </Box>\n                        )}\n                    </Masonry>\n                </ResponsiveMasonry>\n            </Box >\n        </Box>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n        //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n        //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n        //             <Box sx={{ backgroundColor: 'transparent' }}>\n        //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n        //                     p={0.4} color={indigo[900]} mb={2}>\n        //                     Hard Skills\n        //                 </Typography>\n\n        //                 <Stack spacing={1}>\n        //                     {/* Categories  */}\n        //                     {hardData.map(data =>\n\n        //                         <Stack alignItems='center'>\n        //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n        //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n        //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n        //                                     {data.data.map(item =>\n        //                                         // items \n        //                                         <Grid item>\n        //                                             <Chip item color='primary' sx={{\n        //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                                                 borderRadius: '0.3rem'\n        //                                             }}\n        //                                                 icon={<Icon className={item.icon}\n        //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n        //                                                 label={item.item} variant='outlined' />\n        //                                         </Grid>\n        //                                     )}\n        //                                 </Grid>\n        //                             </Paper>\n        //                         </Stack>\n\n        //                     )}\n        //                 </Stack>\n        //             </Box>\n        //         </Grid>\n        //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n        //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n        //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n        //                 Soft Skills\n        //             </Typography>\n        //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n        //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n        //                 {softData.map(data =>\n        //                     <Grid item>\n        //                         <Chip item color='primary' sx={{\n        //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                             borderRadius: '0.3rem', width: 'fit-content'\n        //                         }}\n        //                             icon={<Icon component='img' src={data.icon} />}\n        //                             label={data.item} variant='outlined' />\n        //                     </Grid>\n        //                 )}\n        //             </Box>\n\n        //         </Grid>\n        //     </Box>\n        // </Box>\n    )\n}\n\nexport default Skills;"]},"metadata":{},"sourceType":"module"}