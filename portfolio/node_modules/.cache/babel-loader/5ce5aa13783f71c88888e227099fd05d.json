{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js\";\nimport { Box, Chip, Grid, Icon, Paper, Stack, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport LeaderShip from \"../images/leadership.svg\";\nimport Collaboration from \"../images/support.svg\";\nimport CustomerService from \"../images/customer-service.svg\";\nimport ProblemSolving from \"../images/puzzle.svg\";\nimport CriticalThinking from \"../images/thinking.svg\";\nimport Creativity from \"../images/design-thinking.svg\";\nimport VisualThinking from \"../images/storyboard.svg\";\nimport WorkEthic from \"../images/struggle.svg\";\nimport Enthusiasm from \"../images/business.svg\";\nimport Organization from \"../images/project-plan.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const softData = [{\n  item: \"Leadership\",\n  icon: LeaderShip\n}, {\n  item: \"Collaboration\",\n  icon: Collaboration\n}, {\n  item: \"Customer Service\",\n  icon: CustomerService\n}, {\n  item: \"Problem Solving\",\n  icon: ProblemSolving\n}, {\n  item: \"Critical Thinking\",\n  icon: CriticalThinking\n}, {\n  item: \"Creativity\",\n  icon: Creativity\n}, {\n  item: \"Visual Thinking\",\n  icon: VisualThinking\n}, {\n  item: \"Work Ethic\",\n  icon: WorkEthic\n}, {\n  item: \"Enthusiasm\",\n  icon: Enthusiasm\n}, {\n  item: \"Organization\",\n  icon: Organization\n}];\nexport const hardData = [{\n  category: \"Languages\",\n  sx: {\n    background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})`\n  },\n  data: [{\n    item: \"Python\",\n    color: 'bg-black text-white',\n    icon: \"devicon-python-plain\"\n  }, {\n    item: \"HTML\",\n    color: 'bg-black text-white',\n    icon: \"devicon-html5-plain\"\n  }, {\n    item: \"JavaScript\",\n    color: 'bg-black text-white',\n    icon: \"devicon-javascript-plain\"\n  }, {\n    item: \"CSS\",\n    color: 'bg-black text-white',\n    icon: \"devicon-css3-plain\"\n  }, {\n    item: \"C\",\n    color: 'bg-black text-white',\n    icon: \"devicon-c-plain\"\n  }, {\n    item: \"java\",\n    color: 'bg-black text-white',\n    icon: \"devicon-java-plain\"\n  }, {\n    item: \"kotlin\",\n    color: 'bg-black text-white',\n    icon: \"devicon-kotlin-plain\"\n  }, {\n    item: \"Ruby\",\n    color: 'bg-black text-white',\n    icon: \"devicon-ruby-plain\"\n  }, {\n    item: \"Rust\",\n    color: 'bg-black text-white',\n    icon: \"devicon-rust-plain\"\n  }, {\n    item: \"MatLab\",\n    color: 'bg-black text-white',\n    icon: \"devicon-matlab-plain\"\n  }, {\n    item: \"Ocaml\",\n    color: 'bg-black text-white',\n    icon: \"devicon-ocaml-plain\"\n  }, {\n    item: \"Assembly\",\n    color: 'bg-black text-white',\n    iconName: \"AS\"\n  }]\n}, {\n  category: \"Frameworks\",\n  sx: {\n    background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})`\n  },\n  data: [{\n    item: \"Express\",\n    color: 'bg-black text-white',\n    icon: \"devicon-express-original\"\n  }, {\n    item: \"Bootstrap\",\n    color: 'bg-black text-white',\n    icon: \"devicon-bootstrap-plain\"\n  }, {\n    item: \"TailwindCSS\",\n    color: 'bg-black text-white',\n    icon: \"devicon-tailwindcss-plain\"\n  }, {\n    item: \"Material UI\",\n    color: 'bg-black text-white',\n    icon: \"devicon-materialui-plain\"\n  }]\n}, {\n  category: \"Libraries\",\n  sx: {\n    background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})`\n  },\n  data: [{\n    item: \"React\",\n    color: 'bg-black text-white',\n    icon: \"devicon-react-original\"\n  }, {\n    item: \"NPM\",\n    color: 'bg-black text-white',\n    icon: \"devicon-npm-original-wordmark\"\n  }]\n}, {\n  category: \"Runtime Environments\",\n  sx: {\n    background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})`\n  },\n  data: [{\n    item: \"Node.js\",\n    color: 'bg-black text-white',\n    icon: \"devicon-nodejs-plain\"\n  }, {\n    item: \"JQuery\",\n    color: 'bg-black text-white',\n    icon: \"devicon-jquery-plain\"\n  }, {\n    item: \"TailwindCSS\",\n    color: 'bg-black text-white',\n    icon: \"devicon-tailwindcss-plain\"\n  }, {\n    item: \"Material UI\",\n    color: 'bg-black text-white',\n    icon: \"devicon-materialui-plain\"\n  }]\n}, {\n  category: \"IDEs\",\n  sx: {\n    background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})`\n  },\n  data: [{\n    item: \"Jupyter\",\n    color: 'bg-black text-white',\n    icon: \"devicon-jupyter-plain\"\n  }, {\n    item: \"VSCode\",\n    color: 'bg-black text-white',\n    icon: \"devicon-vscode-plain\"\n  }, {\n    item: \"PyCharm\",\n    color: 'bg-black text-white',\n    icon: \"devicon-pycharm-plain\"\n  }, {\n    item: \"IntelliJ\",\n    color: 'bg-black text-white',\n    icon: \"devicon-intellij-plain\"\n  }, {\n    item: \"Android Studio\",\n    color: 'bg-black text-white',\n    icon: \"devicon-android-plain\"\n  }]\n}, {\n  category: \"Database Language & Frameworks\",\n  sx: {\n    background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})`\n  },\n  data: [{\n    item: \"mongodb\",\n    color: 'bg-black text-white',\n    icon: \"devicon-mongodb-plain\"\n  }, {\n    item: \"MySql\",\n    color: 'bg-black text-white',\n    icon: \"devicon-mysql-plain\"\n  }, {\n    item: \"PostgreSql\",\n    color: 'bg-black text-white',\n    icon: \"devicon-postgresql-plain\"\n  }, {\n    item: \"firebase\",\n    color: 'bg-black text-white',\n    icon: \"devicon-firebase-plain\"\n  }]\n}];\n\nfunction Skills() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n      columnsCountBreakPoints: {\n        1: masonWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: \"3\",\n          m: 1,\n          component: Stack,\n          maxWidth: 352,\n          spacing: 2,\n          sx: {\n            p: 1,\n            borderRadius: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: item.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: item.term\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            fontSize: \"1.2rem\",\n            fontWeight: \"500\",\n            color: teal[900],\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            color: indigo[900],\n            children: item.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            color: deepOrange[900],\n            children: item.concepts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }, this) // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n  //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n  //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n  //             <Box sx={{ backgroundColor: 'transparent' }}>\n  //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n  //                     p={0.4} color={indigo[900]} mb={2}>\n  //                     Hard Skills\n  //                 </Typography>\n  //                 <Stack spacing={1}>\n  //                     {/* Categories  */}\n  //                     {hardData.map(data =>\n  //                         <Stack alignItems='center'>\n  //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n  //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n  //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n  //                                     {data.data.map(item =>\n  //                                         // items \n  //                                         <Grid item>\n  //                                             <Chip item color='primary' sx={{\n  //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                                                 borderRadius: '0.3rem'\n  //                                             }}\n  //                                                 icon={<Icon className={item.icon}\n  //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n  //                                                 label={item.item} variant='outlined' />\n  //                                         </Grid>\n  //                                     )}\n  //                                 </Grid>\n  //                             </Paper>\n  //                         </Stack>\n  //                     )}\n  //                 </Stack>\n  //             </Box>\n  //         </Grid>\n  //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n  //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n  //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n  //                 Soft Skills\n  //             </Typography>\n  //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n  //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n  //                 {softData.map(data =>\n  //                     <Grid item>\n  //                         <Chip item color='primary' sx={{\n  //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                             borderRadius: '0.3rem', width: 'fit-content'\n  //                         }}\n  //                             icon={<Icon component='img' src={data.icon} />}\n  //                             label={data.item} variant='outlined' />\n  //                     </Grid>\n  //                 )}\n  //             </Box>\n  //         </Grid>\n  //     </Box>\n  // </Box>\n  ;\n}\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js"],"names":["Box","Chip","Grid","Icon","Paper","Stack","Typography","indigo","pink","teal","red","green","deepOrange","deepPurple","purple","Masonry","ResponsiveMasonry","softData","item","icon","LeaderShip","Collaboration","CustomerService","ProblemSolving","CriticalThinking","Creativity","VisualThinking","WorkEthic","Enthusiasm","Organization","hardData","category","sx","background","data","color","iconName","Skills","masonWidth","map","p","borderRadius","code","term","name","summary","concepts"],"mappings":"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","sourcesContent":["import { Box, Chip, Grid, Icon, Paper, Stack, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport LeaderShip from \"../images/leadership.svg\";\nimport Collaboration from \"../images/support.svg\";\nimport CustomerService from \"../images/customer-service.svg\";\nimport ProblemSolving from \"../images/puzzle.svg\";\nimport CriticalThinking from \"../images/thinking.svg\";\nimport Creativity from \"../images/design-thinking.svg\";\nimport VisualThinking from \"../images/storyboard.svg\";\nimport WorkEthic from \"../images/struggle.svg\";\nimport Enthusiasm from \"../images/business.svg\";\nimport Organization from \"../images/project-plan.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\n\n\nexport const softData = [\n    { item: \"Leadership\", icon:LeaderShip},\n    { item: \"Collaboration\", icon:Collaboration},\n    { item: \"Customer Service\", icon:CustomerService },\n    { item: \"Problem Solving\", icon: ProblemSolving},\n    { item: \"Critical Thinking\", icon:CriticalThinking},\n    { item: \"Creativity\", icon:Creativity},\n    { item: \"Visual Thinking\", icon:VisualThinking},\n    { item: \"Work Ethic\", icon:WorkEthic},\n    { item: \"Enthusiasm\", icon:Enthusiasm},\n    { item: \"Organization\", icon:Organization},\n];\n\n\nexport const hardData = [\n    {\n        category: \"Languages\", sx: { background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }, data: [\n            { item: \"Python\", color: 'bg-black text-white', icon: \"devicon-python-plain\" },\n            { item: \"HTML\", color: 'bg-black text-white', icon: \"devicon-html5-plain\" },\n            { item: \"JavaScript\", color: 'bg-black text-white', icon: \"devicon-javascript-plain\" },\n            { item: \"CSS\", color: 'bg-black text-white', icon: \"devicon-css3-plain\" },\n            { item: \"C\", color: 'bg-black text-white', icon: \"devicon-c-plain\" },\n            { item: \"java\", color: 'bg-black text-white', icon: \"devicon-java-plain\" },\n            { item: \"kotlin\", color: 'bg-black text-white', icon: \"devicon-kotlin-plain\" },\n            { item: \"Ruby\", color: 'bg-black text-white', icon: \"devicon-ruby-plain\" },\n            { item: \"Rust\", color: 'bg-black text-white', icon: \"devicon-rust-plain\" },\n            { item: \"MatLab\", color: 'bg-black text-white', icon: \"devicon-matlab-plain\" },\n            { item: \"Ocaml\", color: 'bg-black text-white', icon: \"devicon-ocaml-plain\" },\n            {\n                item: \"Assembly\", color: 'bg-black text-white',\n                iconName: \"AS\"\n            },\n        ]\n    },\n\n    {\n        category: \"Frameworks\", sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n            { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n            { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n            { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n            { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n        ]\n    },\n    {\n        category: \"Libraries\", sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n            { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n            { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n        ]\n    },\n    {\n        category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n            { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n            { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n            { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n            { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n        ]\n    },\n    {\n        category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n            { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n            { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n            { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n            { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n            { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n        ]\n    },\n    {\n        category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n            { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n            { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n            { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n            { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n        ]\n    }\n];\n\n\nfunction Skills() {\n    return (\n\n            <Box>\n                 <ResponsiveMasonry\n             columnsCountBreakPoints={{ 1:masonWidth}}>\n                 <Masonry>\n                 {data.map(item =>\n                    <Paper  elevation='3' m={1} component={Stack} maxWidth={352} spacing={2}  sx={{p:1, borderRadius:'0.5rem'}} >\n                        <Stack direction='row' justifyContent='space-between'> \n                            <Typography>{item.code}</Typography>\n                            <Typography>{item.term}</Typography>\n                        </Stack>\n                        <Typography textAlign='center' fontSize='1.2rem' fontWeight='500' color={teal[900]}>{item.name}</Typography>\n                        <Typography textAlign='center' color={indigo[900]}>{item.summary}</Typography>\n                        <Typography textAlign='center' color={deepOrange[900]} >{item.concepts}</Typography>\n                    </Paper>\n                    )}\n                 </Masonry>\n            </ResponsiveMasonry>\n            </Box>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n        //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n        //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n        //             <Box sx={{ backgroundColor: 'transparent' }}>\n        //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n        //                     p={0.4} color={indigo[900]} mb={2}>\n        //                     Hard Skills\n        //                 </Typography>\n\n        //                 <Stack spacing={1}>\n        //                     {/* Categories  */}\n        //                     {hardData.map(data =>\n\n        //                         <Stack alignItems='center'>\n        //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n        //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n        //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n        //                                     {data.data.map(item =>\n        //                                         // items \n        //                                         <Grid item>\n        //                                             <Chip item color='primary' sx={{\n        //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                                                 borderRadius: '0.3rem'\n        //                                             }}\n        //                                                 icon={<Icon className={item.icon}\n        //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n        //                                                 label={item.item} variant='outlined' />\n        //                                         </Grid>\n        //                                     )}\n        //                                 </Grid>\n        //                             </Paper>\n        //                         </Stack>\n\n        //                     )}\n        //                 </Stack>\n        //             </Box>\n        //         </Grid>\n        //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n        //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n        //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n        //                 Soft Skills\n        //             </Typography>\n        //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n        //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n        //                 {softData.map(data =>\n        //                     <Grid item>\n        //                         <Chip item color='primary' sx={{\n        //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                             borderRadius: '0.3rem', width: 'fit-content'\n        //                         }}\n        //                             icon={<Icon component='img' src={data.icon} />}\n        //                             label={data.item} variant='outlined' />\n        //                     </Grid>\n        //                 )}\n        //             </Box>\n            \n        //         </Grid>\n        //     </Box>\n        // </Box>\n    )\n}\n\nexport default Skills;"]},"metadata":{},"sourceType":"module"}