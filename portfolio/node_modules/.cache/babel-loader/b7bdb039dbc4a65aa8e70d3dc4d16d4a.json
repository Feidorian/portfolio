{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Chip, Grid, Icon, Paper, Stack, SvgIcon, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport { ReactComponent as LeaderShip } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/leadership.svg\";\nimport { ReactComponent as Collaboration } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/support.svg\";\nimport { ReactComponent as CustomerService } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/customer-service.svg\";\nimport { ReactComponent as ProblemSolving } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/puzzle.svg\";\nimport { ReactComponent as CriticalThinking } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/thinking.svg\";\nimport { ReactComponent as Creativity } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/design-thinking.svg\";\nimport { ReactComponent as VisualThinking } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/storyboard.svg\";\nimport { ReactComponent as WorkEthic } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/struggle.svg\";\nimport { ReactComponent as Enthusiasm } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/business.svg\";\nimport { ReactComponent as Organization } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/project-plan.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const softData = [{\n  item: \"Leadership\",\n  icon: LeaderShip\n}, {\n  item: \"Collaboration\",\n  icon: Collaboration\n}, {\n  item: \"Customer Service\",\n  icon: CustomerService\n}, {\n  item: \"Problem Solving\",\n  icon: ProblemSolving\n}, {\n  item: \"Critical Thinking\",\n  icon: CriticalThinking\n}, {\n  item: \"Creativity\",\n  icon: Creativity\n}, {\n  item: \"Visual Thinking\",\n  icon: VisualThinking\n}, {\n  item: \"Work Ethic\",\n  icon: WorkEthic\n}, {\n  item: \"Enthusiasm\",\n  icon: Enthusiasm\n}, {\n  item: \"Organization\",\n  icon: Organization\n}];\nexport const data = [{\n  category: 'Soft Skills',\n  color: indigo[900],\n  data: [{\n    item: \"Leadership\",\n    svg: LeaderShip\n  }, {\n    item: \"Collaboration\",\n    svg: Collaboration\n  }, {\n    item: \"Customer Service\",\n    svg: CustomerService\n  }, {\n    item: \"Problem Solving\",\n    svg: ProblemSolving\n  }, {\n    item: \"Critical Thinking\",\n    svg: CriticalThinking\n  }, {\n    item: \"Creativity\",\n    svg: Creativity\n  }, {\n    item: \"Visual Thinking\",\n    svg: VisualThinking\n  }, {\n    item: \"Work Ethic\",\n    icon: WorkEthic\n  }, {\n    item: \"Enthusiasm\",\n    icon: Enthusiasm\n  }, {\n    item: \"Organization\",\n    icon: Organization\n  }]\n} // {\n//     category: \"Languages\", color:'primary', sx: { background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }, data: [\n//         { item: \"Python\", color: 'bg-black text-white', icon: \"devicon-python-plain\" },\n//         { item: \"HTML\", color: 'bg-black text-white', icon: \"devicon-html5-plain\" },\n//         { item: \"JavaScript\", color: 'bg-black text-white', icon: \"devicon-javascript-plain\" },\n//         { item: \"CSS\", color: 'bg-black text-white', icon: \"devicon-css3-plain\" },\n//         { item: \"C\", color: 'bg-black text-white', icon: \"devicon-c-plain\" },\n//         { item: \"java\", color: 'bg-black text-white', icon: \"devicon-java-plain\" },\n//         { item: \"kotlin\", color: 'bg-black text-white', icon: \"devicon-kotlin-plain\" },\n//         { item: \"Ruby\", color: 'bg-black text-white', icon: \"devicon-ruby-plain\" },\n//         { item: \"Rust\", color: 'bg-black text-white', icon: \"devicon-rust-plain\" },\n//         { item: \"MatLab\", color: 'bg-black text-white', icon: \"devicon-matlab-plain\" },\n//         { item: \"Ocaml\", color: 'bg-black text-white', icon: \"devicon-ocaml-plain\" },\n//         {\n//             item: \"Assembly\", color: 'bg-black text-white',\n//             iconName: \"AS\"\n//         },\n//     ]\n// },\n// {\n//     category: \"Frameworks\", color:'info', sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n//         { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n//         { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n//         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n//         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n//     ]\n// },\n// {\n//     category: \"Libraries\", color:'success', sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n//         { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n//         { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n//     ]\n// },\n// {\n//     category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n//         { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n//         { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n//         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n//         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n//     ]\n// },\n// {\n//     category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n//         { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n//         { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n//         { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n//         { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n//         { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n//     ]\n// },\n// {\n//     category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n//         { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n//         { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n//         { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n//         { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n//     ]\n// }\n];\n\nfunction Skills() {\n  _s();\n\n  const [masonWidth, setMasonWidth] = useState((window.innerWidth / 400).toFixed());\n  useEffect(() => {\n    const setWidth = () => setMasonWidth((window.innerWidth / 400).toFixed());\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    backgroundColor: \"re\",\n    sx: {\n      overflowX: 'auto',\n      p: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"70rem\",\n      mx: \"auto\",\n      backgroundColor: \"blu\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(Box, {\n            p: 0.8,\n            sx: {\n              backgroundColor: 'red'\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              component: Box,\n              elevation: \"2\",\n              sx: {\n                borderRadius: '0.5rem',\n                p: 1,\n                mx: 'auto',\n                maxWidth: 400\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                fontSize: \"1.3rem\",\n                fontWeight: \"500\",\n                color: item.color,\n                children: item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                justifyContent: \"center\",\n                mt: 0.5,\n                children: item.data.map(data => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    sx: {\n                      borderRadius: '0.5rem',\n                      fontSize: '1rem',\n                      color: item.color,\n                      borderColor: item.color\n                    },\n                    icon: /*#__PURE__*/_jsxDEV(Icon, {\n                      component: data.icon,\n                      fill: item.color\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 44\n                    }, this) // icon={<Icon className={data.icon} sx={{margin:'auto', fill:'#ffffff'}}>\n                    // <Typography fontWeight='500'>{data.iconName}</Typography></Icon>}\n                    ,\n                    label: data.item,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this) // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n  //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n  //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n  //             <Box sx={{ backgroundColor: 'transparent' }}>\n  //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n  //                     p={0.4} color={indigo[900]} mb={2}>\n  //                     Hard Skills\n  //                 </Typography>\n  //                 <Stack spacing={1}>\n  //                     {/* Categories  */}\n  //                     {hardData.map(data =>\n  //                         <Stack alignItems='center'>\n  //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n  //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n  //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n  //                                     {data.data.map(item =>\n  //                                         // items \n  //                                         <Grid item>\n  //                                             <Chip item color='primary' sx={{\n  //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                                                 borderRadius: '0.3rem'\n  //                                             }}\n  //                                                 icon={<Icon className={item.icon}\n  //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n  //                                                 label={item.item} variant='outlined' />\n  //                                         </Grid>\n  //                                     )}\n  //                                 </Grid>\n  //                             </Paper>\n  //                         </Stack>\n  //                     )}\n  //                 </Stack>\n  //             </Box>\n  //         </Grid>\n  //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n  //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n  //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n  //                 Soft Skills\n  //             </Typography>\n  //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n  //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n  //                 {softData.map(data =>\n  //                     <Grid item>\n  //                         <Chip item color='primary' sx={{\n  //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n  //                             borderRadius: '0.3rem', width: 'fit-content'\n  //                         }}\n  //                             icon={<Icon component='img' src={data.icon} />}\n  //                             label={data.item} variant='outlined' />\n  //                     </Grid>\n  //                 )}\n  //             </Box>\n  //         </Grid>\n  //     </Box>\n  // </Box>\n  ;\n}\n\n_s(Skills, \"KPeck19C11F9E5ckSOpqMRbqoLg=\");\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/home/brian/portfolio/portfolio-app-beta/portfolio/src/components/Skill.js"],"names":["Box","Chip","Grid","Icon","Paper","Stack","SvgIcon","Typography","indigo","pink","teal","red","green","deepOrange","deepPurple","purple","Masonry","ResponsiveMasonry","useEffect","useState","softData","item","icon","LeaderShip","Collaboration","CustomerService","ProblemSolving","CriticalThinking","Creativity","VisualThinking","WorkEthic","Enthusiasm","Organization","data","category","color","svg","Skills","masonWidth","setMasonWidth","window","innerWidth","toFixed","setWidth","overflowX","p","map","backgroundColor","borderRadius","mx","maxWidth","fontSize","borderColor"],"mappings":"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","sourcesContent":["import { Box, Chip, Grid, Icon, Paper, Stack, SvgIcon, Typography } from \"@material-ui/core\";\nimport { indigo, pink, teal, red, green, deepOrange, deepPurple, purple } from '@material-ui/core/colors';\nimport {ReactComponent as LeaderShip} from \"../images/leadership.svg\";\nimport {ReactComponent as Collaboration} from \"../images/support.svg\";\nimport {ReactComponent as CustomerService} from \"../images/customer-service.svg\";\nimport {ReactComponent as ProblemSolving} from \"../images/puzzle.svg\";\nimport {ReactComponent as CriticalThinking} from \"../images/thinking.svg\";\nimport {ReactComponent as Creativity} from \"../images/design-thinking.svg\";\nimport {ReactComponent as VisualThinking} from \"../images/storyboard.svg\";\nimport {ReactComponent as WorkEthic} from \"../images/struggle.svg\";\nimport {ReactComponent as Enthusiasm} from \"../images/business.svg\";\nimport {ReactComponent as Organization} from \"../images/project-plan.svg\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { useEffect, useState} from \"react\";\n\nexport const softData = [\n    { item: \"Leadership\", icon: LeaderShip },\n    { item: \"Collaboration\", icon: Collaboration },\n    { item: \"Customer Service\", icon: CustomerService },\n    { item: \"Problem Solving\", icon: ProblemSolving },\n    { item: \"Critical Thinking\", icon: CriticalThinking },\n    { item: \"Creativity\", icon: Creativity },\n    { item: \"Visual Thinking\", icon: VisualThinking },\n    { item: \"Work Ethic\", icon: WorkEthic },\n    { item: \"Enthusiasm\", icon: Enthusiasm },\n    { item: \"Organization\", icon: Organization },\n];\n\n\nexport const data = [\n    {\n        category: 'Soft Skills', color:indigo[900],data: [\n            { item: \"Leadership\", svg: LeaderShip },\n            { item: \"Collaboration\", svg: Collaboration },\n            { item: \"Customer Service\", svg: CustomerService },\n            { item: \"Problem Solving\", svg: ProblemSolving },\n            { item: \"Critical Thinking\", svg: CriticalThinking },\n            { item: \"Creativity\", svg: Creativity },\n            { item: \"Visual Thinking\", svg: VisualThinking },\n            { item: \"Work Ethic\", icon: WorkEthic },\n            { item: \"Enthusiasm\", icon: Enthusiasm },\n            { item: \"Organization\", icon: Organization },\n        ]\n    },\n\n    // {\n    //     category: \"Languages\", color:'primary', sx: { background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }, data: [\n    //         { item: \"Python\", color: 'bg-black text-white', icon: \"devicon-python-plain\" },\n    //         { item: \"HTML\", color: 'bg-black text-white', icon: \"devicon-html5-plain\" },\n    //         { item: \"JavaScript\", color: 'bg-black text-white', icon: \"devicon-javascript-plain\" },\n    //         { item: \"CSS\", color: 'bg-black text-white', icon: \"devicon-css3-plain\" },\n    //         { item: \"C\", color: 'bg-black text-white', icon: \"devicon-c-plain\" },\n    //         { item: \"java\", color: 'bg-black text-white', icon: \"devicon-java-plain\" },\n    //         { item: \"kotlin\", color: 'bg-black text-white', icon: \"devicon-kotlin-plain\" },\n    //         { item: \"Ruby\", color: 'bg-black text-white', icon: \"devicon-ruby-plain\" },\n    //         { item: \"Rust\", color: 'bg-black text-white', icon: \"devicon-rust-plain\" },\n    //         { item: \"MatLab\", color: 'bg-black text-white', icon: \"devicon-matlab-plain\" },\n    //         { item: \"Ocaml\", color: 'bg-black text-white', icon: \"devicon-ocaml-plain\" },\n    //         {\n    //             item: \"Assembly\", color: 'bg-black text-white',\n    //             iconName: \"AS\"\n    //         },\n    //     ]\n    // },\n   \n    // {\n    //     category: \"Frameworks\", color:'info', sx: { background: `linear-gradient(to bottom, ${indigo[900]}, ${indigo[700]}, ${indigo[900]})` }, data: [\n    //         { item: \"Express\", color: 'bg-black text-white', icon: \"devicon-express-original\" },\n    //         { item: \"Bootstrap\", color: 'bg-black text-white', icon: \"devicon-bootstrap-plain\" },\n    //         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n    //         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Libraries\", color:'success', sx: { background: `linear-gradient(to bottom, ${red[900]}, ${red[700]}, ${red[900]})` }, data: [\n    //         { item: \"React\", color: 'bg-black text-white', icon: \"devicon-react-original\" },\n    //         { item: \"NPM\", color: 'bg-black text-white', icon: \"devicon-npm-original-wordmark\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Runtime Environments\", sx: { background: `linear-gradient(to bottom, ${green[900]}, ${green[700]}, ${green[900]})` }, data: [\n    //         { item: \"Node.js\", color: 'bg-black text-white', icon: \"devicon-nodejs-plain\" },\n    //         { item: \"JQuery\", color: 'bg-black text-white', icon: \"devicon-jquery-plain\" },\n    //         { item: \"TailwindCSS\", color: 'bg-black text-white', icon: \"devicon-tailwindcss-plain\" },\n    //         { item: \"Material UI\", color: 'bg-black text-white', icon: \"devicon-materialui-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"IDEs\", sx: { background: `linear-gradient(to bottom, ${deepOrange[900]}, ${deepOrange[700]}, ${deepOrange[900]})` }, data: [\n    //         { item: \"Jupyter\", color: 'bg-black text-white', icon: \"devicon-jupyter-plain\" },\n    //         { item: \"VSCode\", color: 'bg-black text-white', icon: \"devicon-vscode-plain\" },\n    //         { item: \"PyCharm\", color: 'bg-black text-white', icon: \"devicon-pycharm-plain\" },\n    //         { item: \"IntelliJ\", color: 'bg-black text-white', icon: \"devicon-intellij-plain\" },\n    //         { item: \"Android Studio\", color: 'bg-black text-white', icon: \"devicon-android-plain\" },\n    //     ]\n    // },\n    // {\n    //     category: \"Database Language & Frameworks\", sx: { background: `linear-gradient(to bottom, ${deepPurple[900]}, ${deepPurple[700]}, ${deepPurple[900]})` }, data: [\n    //         { item: \"mongodb\", color: 'bg-black text-white', icon: \"devicon-mongodb-plain\" },\n    //         { item: \"MySql\", color: 'bg-black text-white', icon: \"devicon-mysql-plain\" },\n    //         { item: \"PostgreSql\", color: 'bg-black text-white', icon: \"devicon-postgresql-plain\" },\n    //         { item: \"firebase\", color: 'bg-black text-white', icon: \"devicon-firebase-plain\" },\n    //     ]\n    // }\n];\n\n\nfunction Skills() {\n    const [masonWidth, setMasonWidth] = useState((window.innerWidth/400).toFixed());\n\n    useEffect(() => {\n        const setWidth = () => setMasonWidth((window.innerWidth/400).toFixed());\n        \n    })\n\n    return (\n        <Box backgroundColor='re' sx={{overflowX:'auto', p:1}}>\n            <Box maxWidth='70rem' mx='auto' backgroundColor='blu'>\n                <ResponsiveMasonry>\n                    <Masonry  >\n                        {data.map(item =>\n                            <Box p={0.8} sx={{backgroundColor:'red'}}>\n                            <Paper component={Box} elevation='2' sx={{borderRadius:'0.5rem', p:1, mx:'auto', maxWidth:400}}>\n                                <Typography textAlign='center' fontSize='1.3rem' fontWeight='500' color={item.color}>{item.category}</Typography>\n                                <Grid container spacing={1} justifyContent='center' mt={0.5}>\n                                    {item.data.map(data =>\n                                    <Grid item>\n                                    <Chip sx={{borderRadius:'0.5rem', fontSize:'1rem', color:item.color, borderColor:item.color}}\n                                     icon={<Icon component={data.icon} fill={item.color} />}\n                                    // icon={<Icon className={data.icon} sx={{margin:'auto', fill:'#ffffff'}}>\n                                        // <Typography fontWeight='500'>{data.iconName}</Typography></Icon>}\n                                    label={data.item} variant='outlined' />\n                                    </Grid>\n                                    )}\n                                </Grid>\n                            </Paper>\n                            </Box>\n                        )}\n                    </Masonry>\n                </ResponsiveMasonry>\n            </Box >\n        </Box>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // <Box display='flex' justifyContent='center' overflow='auto' width='100%' backgroundColor='blu' p={1}>\n        //     <Box component={Grid} container width='60rem' backgroundColor='purpl' spacing={3} flexWrap='wrap'>\n        //         <Grid item width={{ xs: 1, sm: 5 / 8 }}>\n        //             <Box sx={{ backgroundColor: 'transparent' }}>\n        //                 <Typography mx='auto' component={Paper} fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' borderRadius='0.5rem'\n        //                     p={0.4} color={indigo[900]} mb={2}>\n        //                     Hard Skills\n        //                 </Typography>\n\n        //                 <Stack spacing={1}>\n        //                     {/* Categories  */}\n        //                     {hardData.map(data =>\n\n        //                         <Stack alignItems='center'>\n        //                             <Paper sx={Object.assign(data.sx || {}, { borderRadius: '1rem', px: 1, py: 0.4, width: 'fit-content' })} >\n        //                                 <Typography textAlign='center' color='white' fontSize='1.2rem' fontWeight='600'>{data.category}</Typography>\n        //                                 <Grid container spacing={1} p={1} flexWrap='wrap' justifyContent='center'>\n        //                                     {data.data.map(item =>\n        //                                         // items \n        //                                         <Grid item>\n        //                                             <Chip item color='primary' sx={{\n        //                                                 fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                                                 borderRadius: '0.3rem'\n        //                                             }}\n        //                                                 icon={<Icon className={item.icon}\n        //                                                     sx={item.iconName ? { width: 'fit-content', fontSize: '1.2rem', fontWeight: 600, mb: '0.4rem' } : {}}>{item.iconName}</Icon>}\n        //                                                 label={item.item} variant='outlined' />\n        //                                         </Grid>\n        //                                     )}\n        //                                 </Grid>\n        //                             </Paper>\n        //                         </Stack>\n\n        //                     )}\n        //                 </Stack>\n        //             </Box>\n        //         </Grid>\n        //         <Grid item width={{ xs: 1, sm: 3 / 8 }} >\n        //             <Typography component={Paper} mx='auto' fontSize='1.7rem' fontWeight='600' backgroundColor='white' width='fit-content' \n        //             mb={3} borderRadius='0.5rem' p={0.4} color={purple[700]}>\n        //                 Soft Skills\n        //             </Typography>\n        //             <Box component={Grid} container justifyContent='center' columnSpacing={0.5} rowSpacing={1} flexWrap='wrap'\n        //                 borderRadius='1rem'  py={3} sx={{ background: `linear-gradient(to bottom, ${teal[900]}, ${teal[700]}, ${teal[900]})` }}>\n        //                 {softData.map(data =>\n        //                     <Grid item>\n        //                         <Chip item color='primary' sx={{\n        //                             fontSize: '1.2rem', color: 'white', borderColor: 'black', backgroundColor: 'black',\n        //                             borderRadius: '0.3rem', width: 'fit-content'\n        //                         }}\n        //                             icon={<Icon component='img' src={data.icon} />}\n        //                             label={data.item} variant='outlined' />\n        //                     </Grid>\n        //                 )}\n        //             </Box>\n\n        //         </Grid>\n        //     </Box>\n        // </Box>\n    )\n}\n\nexport default Skills;"]},"metadata":{},"sourceType":"module"}